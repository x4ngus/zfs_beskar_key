#!/bin/bash
# Generated by zfs_beskar_key v{{VERSION}}
set -euo pipefail

LABEL="{{TOKEN_LABEL}}"
MOUNTPOINT="{{MOUNTPOINT}}"
KEY_PATH="{{KEY_PATH}}"
MAX_WAIT_SECONDS=30
SLEEP_INTERVAL=1

log() {
    echo "[BESKAR] $*" >&2
}

wait_for_device() {
    local elapsed=0
    while (( elapsed < MAX_WAIT_SECONDS )); do
        if blkid -L "$LABEL" >/dev/null 2>&1; then
            return 0
        fi
        sleep "$SLEEP_INTERVAL"
        ((elapsed += SLEEP_INTERVAL))
    done
    return 1
}

wait_for_key() {
    local elapsed=0
    while (( elapsed < MAX_WAIT_SECONDS )); do
        if [[ -f "$KEY_PATH" ]]; then
            return 0
        fi
        sleep "$SLEEP_INTERVAL"
        ((elapsed += SLEEP_INTERVAL))
    done
    return 1
}

if ! wait_for_device; then
    log "Token $LABEL not detected within ${MAX_WAIT_SECONDS}s; leaving unlock to native prompts."
    exit 0
fi

mkdir -p "$MOUNTPOINT"
DEVICE="$(blkid -L "$LABEL" 2>/dev/null || true)"
if [[ -z $DEVICE ]]; then
    log "Token label $LABEL vanished before mount; leaving unlock to native prompts."
    exit 0
fi

if mountpoint -q "$MOUNTPOINT"; then
    log "Token already mounted at $MOUNTPOINT."
else
    if ! mount -o ro,nosuid,nodev,noexec "$DEVICE" "$MOUNTPOINT"; then
        log "Unable to mount $DEVICE at $MOUNTPOINT."
        exit 0
    fi
fi

if ! wait_for_key; then
    log "Key file $KEY_PATH not detected within ${MAX_WAIT_SECONDS}s."
else
    if zfs load-key -a; then
        log "zfs load-key -a completed successfully."
    else
        log "zfs load-key -a returned non-zero status; native prompts will handle the fallback."
    fi
fi

exit 0
